class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        ArrayList<Integer> ans = new ArrayList<>();
        dfs(root, ans);
        return ans;
    }

    // depth first search (dfs) обход в глубину
    private void dfs(TreeNode root, ArrayList<Integer> ans) {
        if (root == null) {
        return;
        }
        ans.add(root.val);
        dfs(root.left, ans);
        dfs(root.right, ans);
    }

    findPath(src + addend, target, addend, mult, path + " " + src + " + " + addend);
    findPath(src * mult, target, addend, mult, path + " " + src + " * " + mult);
}